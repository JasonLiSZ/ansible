---

# introduction

- name: print general info
  debug: msg="[{{ role_name }}] will be executed, for group [{{ group_names }}], on [{{ inventory_hostname }}]"

- name: print role execution info
  debug: msg="nginx_config_template [{{ nginx_config_template }}]
              , web_box_name [{{ web_box_name }}]
              , site_port [{{ site_port }}]
              , docker_volumes_source_directory [{{ docker_volumes_source_directory }}]"

- name: clear files from host
  file:
    path: "{{ docker_volumes_source_directory }}"
    state: absent
  when: is_load_balance != true

- name: create temp directory
  file:
    path: "{{ docker_volumes_source_directory }}"
    state: directory
  when: is_load_balance != true

- name: copy {{ nginx_config_template }} to host
  template: src={{ nginx_config_template }} dest="{{ docker_volumes_source_directory }}/nginx.conf"

- name: copy nginx.confg from host to box
  command: docker cp {{ docker_volumes_source_directory }}/nginx.conf {{ web_box_name }}:/etc/nginx/nginx.conf

- name: delete nginx conf from temp directory
  file:
    path: "{{ docker_volumes_source_directory }}/nginx.conf"
    state: absent

- name: deploy package to host
  copy:
    src: "{{ release_package }}"
    dest: "{{ docker_volumes_source_directory }}"
  when: is_load_balance != true

- name: copy files to container
  command: docker cp {{ docker_volumes_source_directory }}/. {{ web_box_name }}:/var/www/html/
  when: is_load_balance != true

- name: start nginx
  command: docker exec {{ web_box_name }} nginx

- name: nginx complete
  debug: msg="------------ nginx [{{ web_box_name }}] create successfully ------------"
